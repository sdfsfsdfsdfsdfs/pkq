import React, { useState } from 'react';
import './articles.css';

// 模拟文章数据
const articleData = [
  {
    id: 1,
    title: '设计系统的构建之路',
    summary: '如何构建一个可扩展的设计系统，提高团队协作效率，确保产品设计的一致性...',
    date: '2024-03-15',
    content: `设计系统是提高团队效率的关键工具。一个好的设计系统应该包含：

1. 设计原则：指导整体设计方向
- 一致性原则：确保用户体验的连贯性
- 简洁性原则：减少用户认知负担
- 反馈原则：提供清晰的操作反馈
- 效率原则：提高用户操作效率

2. 组件库：可复用的界面构建模块
- 基础组件：按钮、输入框、选择器等
- 复合组件：表单、表格、导航等
- 业务组件：特定场景的定制组件
- 布局组件：页面结构和排版组件

3. 设计规范：包括颜色、字体、间距等
- 色彩系统：主色、辅助色、状态色
- 字体系统：字号、行高、字重
- 间距系统：内边距、外边距、组件间距
- 阴影系统：不同层级的投影效果

4. 使用文档：详细的使用说明和示例
- 组件说明：用途、参数、示例
- 最佳实践：常见场景的解决方案
- 设计模式：交互模式和设计思路
- 更新日志：版本迭代和变更说明

在实际构建过程中，我们需要注意以下几点：
- 保持简单性和一致性，避免过度设计
- 确保组件的可复用性，提高开发效率
- 建立清晰的版本控制，管理系统迭代
- 持续收集用户反馈，不断优化改进
- 注重文档维护，确保团队理解和使用
- 考虑扩展性，适应业务发展需求

通过精心构建设计系统，我们可以：
1. 显著提高产品开发效率
2. 确保设计的一致性和专业性
3. 降低沟通成本和维护成本
4. 提升团队协作效率
5. 建立统一的设计语言

设计系统不是一成不变的，需要随着产品的发展不断迭代和完善。在维护过程中，要注意收集用户反馈，关注业务需求变化，及时更新和优化系统内容。`
  },
  {
    id: 2,
    title: 'UI设计中的色彩心理学',
    summary: '探讨色彩如何影响用户的情绪和行为决策，以及如何在设计中运用色彩心理学原理...',
    date: '2024-03-10',
    content: `色彩是设计中最强大的视觉元素之一，它能直接影响用户的情绪和行为。了解色彩心理学，对于创造有效的用户界面至关重要。

色彩的基本心理效应：

1. 红色
- 激发能量和热情
- 创造紧迫感和重要性
- 可用于强调按钮和重要信息
- 过度使用可能造成视觉疲劳

2. 蓝色
- 传达信任和专业
- 给人冷静和理性的感觉
- 适合金融和企业类应用
- 有助于提高用户专注度

3. 绿色
- 象征自然和生长
- 给人平和和安全感
- 适合健康和环保类产品
- 可用于成功状态的反馈

4. 黄色
- 传达乐观和活力
- 提高警觉性和注意力
- 适合突出显示重要信息
- 需要注意与背景的对比度

在实际设计中的应用原则：

1. 建立色彩系统
- 定义主色调和辅助色
- 确保色彩的可访问性
- 建立清晰的色彩层级
- 保持整体视觉和谐

2. 考虑文化差异
- 不同文化中色彩含义不同
- 注意色彩的本地化适应
- 避免文化禁忌
- 进行跨文化测试

3. 可访问性设计
- 确保足够的对比度
- 考虑色盲用户的需求
- 提供替代的视觉提示
- 进行可访问性测试

4. 品牌一致性
- 与品牌调性保持一致
- 建立独特的色彩标识
- 在不同场景中保持统一
- 注意色彩版权问题

色彩使用的注意事项：
1. 避免过度使用强烈色彩
2. 保持适当的对比度
3. 考虑环境光线的影响
4. 注意色彩的感知差异
5. 定期进行用户测试

通过合理运用色彩心理学原理，我们可以：
- 提升用户体验
- 强化品牌识别
- 引导用户行为
- 创造情感共鸣
- 提高转化率`
  },
  {
    id: 3,
    title: '移动端设计的关键考量',
    summary: '移动端用户体验设计的要点和最佳实践，如何打造流畅的移动应用界面...',
    date: '2024-03-05',
    content: `移动端设计与桌面端有着显著的差异，需要特别注意以下几个关键方面：

1. 触摸交互设计
- 合适的点击区域大小
- 手势操作的自然性
- 避免复杂的操作方式
- 考虑单手操作的便利性

2. 屏幕尺寸适配
- 响应式布局设计
- 内容的优先级排序
- 关键信息的突出显示
- 适配不同设备分辨率

3. 性能优化
- 快速的加载速度
- 流畅的动画效果
- 合理的资源加载
- 离线功能支持

4. 用户体验优化
- 清晰的视觉层级
- 直观的导航设计
- 及时的操作反馈
- 错误处理机制

[内容持续...]`
  },
  {
    id: 4,
    title: '数据可视化设计指南',
    summary: '如何设计直观且有效的数据展示界面，让复杂数据变得易于理解...',
    date: '2024-02-28',
    content: `数据可视化是将复杂数据转化为直观图形的艺术。一个好的数据可视化设计应该：

1. 清晰展示数据
- 选择合适的图表类型
- 确保数据准确性
- 提供必要的上下文
- 避免数据失真

2. 交互设计
- 提供筛选功能
- 支持数据钻取
- 实现数据对比
- 添加动态效果

[内容持续...]`
  },
  {
    id: 5,
    title: '设计师的工作流程优化',
    summary: '提高工作效率的方法和工具推荐，建立高效的设计工作流程...',
    date: '2024-02-20',
    content: `高效的工作流程是提升设计质量和效率的关键。本文将分享一些实用的优化方法：

1. 项目管理
- 任务分解和规划
- 时间管理技巧
- 协作流程优化
- 文件管理系统

[内容持续...]`
  },
  {
    id: 6,
    title: '交互设计的心理学基础',
    summary: '了解用户心理学原理，设计更符合用户认知习惯的界面...',
    date: '2024-02-15',
    content: `交互设计中的心理学原理对用户体验有着深远的影响。主要包括：

1. 格式塔原理
- 相似性原则
- 连续性原则
- 封闭性原则
- 简单性原则

[内容持续...]`
  },
  {
    id: 7,
    title: '设计评审技巧',
    summary: '如何组织和参与设计评审，提高设计质量和团队协作效率...',
    date: '2024-02-10',
    content: `设计评审是提升设计质量的重要环节。本文将介绍：

1. 评审准备
- 材料整理
- 议程安排
- 参与者选择
- 目标设定

[内容持续...]`
  },
  {
    id: 8,
    title: '品牌设计系统构建',
    summary: '创建统一的品牌设计语言，确保品牌识别度和一致性...',
    date: '2024-02-05',
    content: `品牌设计系统是企业视觉识别的基础。需要考虑：

1. 品牌定位
- 目标受众分析
- 竞品调研
- 价值主张
- 品牌个性

[内容持续...]`
  }
];

function Articles() {
  const [selectedArticle, setSelectedArticle] = useState(null);

  return (
    <div className="articles-page">
      <h1 className="articles-title">文章列表</h1>
      
      <div className="articles-grid">
        {articleData.map(article => (
          <div 
            key={article.id} 
            className="article-card"
            onClick={() => setSelectedArticle(article)}
          >
            <div className="article-content">
              <h2>{article.title}</h2>
              <p className="article-summary">{article.summary}</p>
              <span className="article-date">{article.date}</span>
            </div>
          </div>
        ))}
      </div>

      {/* 文章详情遮罩层 */}
      {selectedArticle && (
        <div className="article-overlay" onClick={() => setSelectedArticle(null)}>
          <div className="article-detail" onClick={e => e.stopPropagation()}>
            <div className="article-detail-header">
              <h2>{selectedArticle.title}</h2>
              <span className="article-detail-date">{selectedArticle.date}</span>
            </div>
            <div className="article-detail-content">
              {selectedArticle.content.split('\n').map((paragraph, index) => (
                <p key={index}>{paragraph}</p>
              ))}
            </div>
            <button 
              className="close-button"
              onClick={() => setSelectedArticle(null)}
            >
              关闭
            </button>
          </div>
        </div>
      )}
    </div>
  );
}

export default Articles; 